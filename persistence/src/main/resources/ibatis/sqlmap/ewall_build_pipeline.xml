<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="com.taobao.tae.ewall.build.BuildPipelineDO">
    <typeAlias alias="buildPipelineDO" type="com.taobao.tae.ewall.build.BuildPipelineDO"/>
    <resultMap id="buildPipelineDO.rm" class="buildPipelineDO">
        <result column="id" property="id"/>
        <result column="pipeline_id" property="pipelineId"/>
        <result column="status" property="status"/>
        <result column="result" property="result"/>
        <result column="operator" property="operator"/>
        <result column="comment" property="comment"/>
        <result column="gmt_start" property="gmtStart"/>
        <result column="gmt_end" property="gmtEnd"/>
    </resultMap>

    <!-- selector -->
    <sql id="buildPipelineDO.selector">
		SELECT
		id, pipeline_id,status, result, operator, comment, gmt_start,gmt_end
		FROM build_pipeline
    </sql>
    <!-- END selector -->

    <!-- counter -->
    <sql id="buildPipelineDO.counter">
		SELECT COUNT(*) FROM build_pipeline
    </sql>
    <!-- END counter -->

    <!-- 条件片段 -->
    <sql id="buildPipelineDO.get_segment">
        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="id">
                id = #id#
            </isNotNull>
            <isNotNull prepend="AND" property="id">
                pipeline_id = #pipelineId#
            </isNotNull>
            <isNotNull prepend="AND" property="status">
                status = #status#
            </isNotNull>
            <isNotNull prepend="AND" property="result">
                result = #result#
            </isNotNull>
            <isNotNull prepend="AND" property="operator">
                operator = #operator#
            </isNotNull>
            <isNotNull prepend="AND" property="comment">
                comment = #comment#
            </isNotNull>
            <isNotNull prepend="AND" property="gmtStart">
                gmt_start = #gmtStart#
            </isNotNull>
            <isNotNull prepend="AND" property="gmtEnd">
                gmt_end = #gmtEnd#
            </isNotNull>
        </dynamic>
    </sql>

    <!-- INSERT -->
    <insert id="create" parameterClass="buildPipelineDO">
        INSERT INTO build_pipeline(
        pipeline_id,status, result, operator, comment, gmt_start, gmt_end,gmt_create, gmt_modified)
        VALUES(
        #pipelineId#,#status#, #result#,#operator#, #comment#, #gmtStart#, #gmtEnd#, now(), now())
        <selectKey resultClass="long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>
    <!-- ENE INSERT -->

    <!--更新 -->
    <update id="update" parameterClass="buildPipelineDO">
        UPDATE build_pipeline
        set gmt_modified = now()
        <dynamic>
            <isNotNull prepend="," property="pipelineId">
                pipeline_id = #pipelineId#
            </isNotNull>
            <isNotNull prepend="," property="status">
                status = #status#
            </isNotNull>
            <isNotNull prepend="," property="result">
                result = #result#
            </isNotNull>
            <isNotNull prepend="," property="operator">
                operator = #operator#
            </isNotNull>
            <isNotNull prepend="," property="comment">
                comment = #comment#
            </isNotNull>
            <isNotNull prepend="," property="gmtStart">
                gmt_start = #gmtStart#
            </isNotNull>
            <isNotNull prepend="," property="gmtEnd">
                gmt_end = #gmtEnd#
            </isNotNull>
        </dynamic>
        where id = #id#
    </update>

    <!-- GET -->
    <select id="load" resultMap="buildPipelineDO.rm">
        <include refid="buildPipelineDO.selector"/>
        WHERE ID = #id#
    </select>

    <select id="loadLast" parameterClass="buildPipelineDO" resultMap="buildPipelineDO.rm">
        <include refid="buildPipelineDO.selector"/>
        where pipeline_id=#pipelineId#
        order by id DESC limit 1
    </select>

    <select id="find" parameterClass="buildPipelineDO" resultMap="buildPipelineDO.rm">
        <include refid="buildPipelineDO.selector"/>
        <include refid="buildPipelineDO.get_segment"/>
    </select>
    <!-- END GET -->

    <!-- END 分页筛选 -->

    <!-- 删除 -->
    <delete id="delete" parameterClass="long">
    	DELETE FROM build_pipeline where id = #id#
    </delete>
    <!-- END 删除 -->

    <!-- 分页筛选 -->
    <select id="page_count" resultClass="Integer">
        <include refid="buildPipelineDO.counter"/>
        <include refid="buildPipelineDO.get_segment"/>
    </select>

    <select id="page" resultClass="Integer" resultMap="buildPipelineDO.rm">
        <include refid="buildPipelineDO.selector"/>
        <include refid="buildPipelineDO.get_segment"/>
        LIMIT #query_page_index#, #query_page_size#;
    </select>
    <!-- END 分页筛选 -->
</sqlMap>

