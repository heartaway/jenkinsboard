<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="com.taobao.tae.ewall.pipeline.PipelineDO">
    <typeAlias alias="pipelineDO" type="com.taobao.tae.ewall.pipeline.PipelineDO"/>
    <resultMap id="pipelineDO.rm" class="pipelineDO">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="group_id" property="groupId"/>
        <result column="head_project_id" property="headProjectId"/>
        <result column="features" property="features"/>
        <result column="description" property="description"/>
        <result column="display" property="display"/>
    </resultMap>

    <!-- selector -->
    <sql id="pipelineDO.selector">
		SELECT
		id, name, group_id, head_project_id, features, description,display
		FROM pipeline
    </sql>
    <!-- END selector -->

    <!-- counter -->
    <sql id="pipelineDO.counter">
		SELECT COUNT(*) FROM pipeline
    </sql>
    <!-- END counter -->

    <!-- 条件片段 -->
    <sql id="pipelineDO.get_segment">
        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="id">
                id = #id#
            </isNotNull>
            <isNotNull prepend="AND" property="name">
                name = #name#
            </isNotNull>
            <isNotNull prepend="AND" property="groupId">
                group_id = #groupId#
            </isNotNull>
            <isNotNull prepend="AND" property="headProjectId">
                head_project_id = #headProjectId#
            </isNotNull>
            <isNotNull prepend="AND" property="features">
                features = #features#
            </isNotNull>
            <isNotNull prepend="AND" property="description">
                description = #description#
            </isNotNull>
            <isNotNull prepend="AND" property="display">
                display = #display#
            </isNotNull>
        </dynamic>
    </sql>

    <!-- INSERT -->
    <insert id="create" parameterClass="pipelineDO">
        INSERT INTO pipeline(
        name, group_id, head_project_id, features, description, display,gmt_create, gmt_modified)
        VALUES(
        #name#, #groupId#, #headProjectId#, #features#, #description#,#display#, now(), now())
        <selectKey resultClass="int" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>
    <!-- ENE INSERT -->

    <!--更新 -->
    <update id="update" parameterClass="pipelineDO">
        UPDATE pipeline
        set gmt_modified = now()
        <dynamic>
            <isNotNull prepend="," property="name">
                name = #name#
            </isNotNull>
            <isNotNull prepend="," property="groupId">
                group_id = #groupId#
            </isNotNull>
            <isNotNull prepend="," property="headProjectId">
                head_project_id = #headProjectId#
            </isNotNull>
            <isNotNull prepend="," property="features">
                features = #features#
            </isNotNull>
            <isNotNull prepend="," property="description">
                description = #description#
            </isNotNull>
            <isNotNull prepend="," property="display">
                display = #display#
            </isNotNull>
        </dynamic>
        where id = #id#
    </update>

    <!-- GET -->
    <select id="load" resultMap="pipelineDO.rm">
        <include refid="pipelineDO.selector"/>
        WHERE ID = #id#
    </select>

    <select id="find" parameterClass="pipelineDO" resultMap="pipelineDO.rm">
        <include refid="pipelineDO.selector"/>
        <include refid="pipelineDO.get_segment"/>
    </select>
    <!-- END GET -->

    <!-- END 分页筛选 -->

    <!-- 删除 -->
    <delete id="delete" parameterClass="int">
    	DELETE FROM pipeline where id = #id#
    </delete>
    <!-- END 删除 -->

    <!-- 分页筛选 -->
    <select id="page_count" resultClass="Integer">
        <include refid="pipelineDO.counter"/>
        <include refid="pipelineDO.get_segment"/>
    </select>

    <select id="page" resultClass="Integer" resultMap="pipelineDO.rm">
        <include refid="pipelineDO.selector"/>
        <include refid="pipelineDO.get_segment"/>
        LIMIT #query_page_index#, #query_page_size#;
    </select>
    <!-- END 分页筛选 -->
</sqlMap>

